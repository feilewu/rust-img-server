name: Build image

on:
  push:
    branches:
      - main

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-img-server:
    runs-on: ubuntu-20.04
    container: centos:7
    steps:
      - uses: actions/checkout@v3
      - name: Build img server
        run: |
          curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo && \
          yum clean all && yum makecache && \
          yum -y groupinstall 'Development Tools' && \
          echo $PWD && echo $HOME && \
          curl https://sh.rustup.rs -sSf | sh -s -- -y && \
          find / -name .cargo && \
          source $HOME/.cargo/env && \
          rustup default stable && \
          cargo build --release && \
          chmod +x target/*

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          version=$(grep '^version =' Cargo.toml | sed 's/version = "//;s/"//g')
          echo "version:"$version
          echo "VERSION=${version}" >> $GITHUB_ENV
          mv target/release/img-server target/release/img-server-v$version
          ls target/release

      - name: Upload img server bin
        uses: actions/upload-artifact@v3
        with:
          path: ./target/release/img-server-v${{ env.VERSION }}
          name: img-server-bin-${{github.sha}}
          retention-days: 1
      

  build-image-and-push:
    needs: build-img-server
    runs-on: ubuntu-20.04
    steps:
     - uses: actions/checkout@v3

     - name: Get version from Cargo.toml
       id: get_version
       run: |
         version=$(grep '^version =' Cargo.toml | sed 's/version = "//;s/"//g')
         echo "version:"$version
         echo "VERSION=${version}" >> $GITHUB_ENV

     - name: Download All Artifacts
       uses: actions/download-artifact@v3
       with:
          name: img-server-bin-${{github.sha}}
          path: ./target/release

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     - name: Login to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Build and push Docker image
       uses: docker/build-push-action@v2
       with:
         context: .
         file: DockerFile
         push: true
         tags: pfxuresources/img-server:centos7_v${{ env.VERSION }}
